{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","onTabSelected","selectedTabId","currentTab","find","tab","id","className","map","title","classNames","href","onClick","updateSelectedTab","content","App","useState","selectedTab","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAACC,GACpC,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,cACAC,EACEH,EADFG,cAGIC,EAAaH,EAChBI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOJ,MAAkBF,EAAK,GAQjD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBAEEF,UAAWG,IACT,CACE,YAAaJ,IAAOH,EAAWG,KAGnC,UAAQ,MAPV,SASE,mBACEK,KAAI,WAAML,GACV,UAAQ,UACRM,QAAS,kBA1BC,SAACP,GACrBA,EAAIC,KAAOJ,GACbD,EAAcI,GAwBaQ,CAAkBR,IAHnC,SAKGI,KAbEH,UAqBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAWW,cCnDPd,EAAO,CAClB,CAAEM,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,eACxC,CAAER,GAAI,QAASG,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOiB,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAYR,SAGlC,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeiB,EACfhB,cAAee,EAAYX,SCrBnCa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.69c28be4.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../types';\n\ntype Props = {\n  tabs: Tab[],\n  onTabSelected: (tab: Tab) => void,\n  selectedTabId: string,\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const {\n    tabs,\n    onTabSelected,\n    selectedTabId,\n  } = props;\n\n  const currentTab = tabs\n    .find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const updateSelectedTab = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                className={classNames(\n                  {\n                    'is-active': id === currentTab.id,\n                  },\n                )}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => updateSelectedTab(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/index';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        onTabSelected={setSelectedTab}\n        selectedTabId={selectedTab.id}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}